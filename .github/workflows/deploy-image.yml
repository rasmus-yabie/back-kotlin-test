#
# ref: https://docs.github.com/en/packages/managing-github-packages-using-github-actions-workflows/publishing-and-installing-a-package-with-github-actions
# doc: https://github.com/sourcetoad/aws-codedeploy-action
# doc: https://docs.github.com/en/actions/security-guides/encrypted-secrets
#

name: Create and publish a Docker image

on:
  pull_request:
    branches: ['release']

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Set up Maven
        uses: stCarolas/setup-maven@v4.5
        with:
          maven-version: 3.8.2

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up JDK 1.17
        uses: actions/setup-java@v1
        with:
          java-version: 1.17

      - name: Build with Maven
        run: mvn -B package --file pom.xml

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          platforms: 'arm64'
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          role-to-assume: arn:aws:iam::495665774687:user/terraform-admin
          aws-region: eu-north-1

      - name: AWS CodeDeploy
        uses: sourcetoad/aws-codedeploy-action@v1
        env:
          codedeploy_name: d-A4M0OS3AM
          codedeploy_group: KotlinGitDeployTestGroup
        with:
          s3_bucket: s3://tibell-link-code-deploy-backend-ecs/deploy
          s3_folder: kotlin-git-deploy